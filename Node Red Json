[
    {
        "id": "7d429c7cf11f52de",
        "type": "tab",
        "label": "Imersion Heater Good",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bc994490c0a767c9",
        "type": "switch",
        "z": "7d429c7cf11f52de",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Go",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "7845e37d7eac6670",
                "5004bea889e6a410"
            ],
            [
                "7845e37d7eac6670",
                "5004bea889e6a410"
            ]
        ]
    },
    {
        "id": "4cc3f69508d86d65",
        "type": "api-call-service",
        "z": "7d429c7cf11f52de",
        "name": "Immersion_heater_on",
        "server": "315411fb.df557e",
        "version": 5,
        "debugenabled": false,
        "domain": "homeassistant",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.immersion_heater_on_r_1f_tp60"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1600,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c9dd5c2c7ea1fcd6",
        "type": "api-call-service",
        "z": "7d429c7cf11f52de",
        "name": "Immersion_heater_off",
        "server": "315411fb.df557e",
        "version": 5,
        "debugenabled": false,
        "domain": "homeassistant",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.immersion_heater_off_r_1f_tp50"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1600,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b1d4244aadd3ad4d",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "Go",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Go",
        "payloadType": "str",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "bc994490c0a767c9"
            ]
        ]
    },
    {
        "id": "1d7676fb20cd3c13",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Stop",
        "payloadType": "str",
        "x": 850,
        "y": 340,
        "wires": [
            [
                "bc994490c0a767c9"
            ]
        ]
    },
    {
        "id": "bc0ee0869f1d7748",
        "type": "api-call-service",
        "z": "7d429c7cf11f52de",
        "name": "Immersion_heater_off",
        "server": "315411fb.df557e",
        "version": 5,
        "debugenabled": false,
        "domain": "homeassistant",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.immersion_heater_off_r_1f_tp50"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "4cc3f69508d86d65"
            ]
        ]
    },
    {
        "id": "6ebb51bba08cb86e",
        "type": "api-call-service",
        "z": "7d429c7cf11f52de",
        "name": "Immersion_heater_on",
        "server": "315411fb.df557e",
        "version": 5,
        "debugenabled": false,
        "domain": "homeassistant",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.immersion_heater_on_r_1f_tp60"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1380,
        "y": 320,
        "wires": [
            [
                "c9dd5c2c7ea1fcd6"
            ]
        ]
    },
    {
        "id": "79997781cf45cff6",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "debugOn",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 200,
        "wires": []
    },
    {
        "id": "6d2486dfbc6aef23",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "debugOff",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 380,
        "wires": []
    },
    {
        "id": "7845e37d7eac6670",
        "type": "trigger",
        "z": "7d429c7cf11f52de",
        "name": "offOnce",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "Go",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1180,
        "y": 320,
        "wires": [
            [
                "6ebb51bba08cb86e",
                "6d2486dfbc6aef23"
            ]
        ]
    },
    {
        "id": "5004bea889e6a410",
        "type": "trigger",
        "z": "7d429c7cf11f52de",
        "name": "onOnce",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "Stop",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "bc0ee0869f1d7748",
                "79997781cf45cff6"
            ]
        ]
    },
    {
        "id": "65cf0ce07e616969",
        "type": "change",
        "z": "7d429c7cf11f52de",
        "name": "cleans all var",
        "rules": [
            {
                "t": "delete",
                "p": "bat",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "pvPower",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "batFull",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "battary",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "battery1",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "batteryState",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "battyState",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "pv",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "pvGood",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "pvPower2",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "pvState",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "testFull",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "testFull",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "batteryState",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "pvState",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 180,
        "wires": [
            [
                "32c5d3bd9abda45b"
            ]
        ]
    },
    {
        "id": "32c5d3bd9abda45b",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "2892cc19d43d75ce",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 180,
        "wires": [
            [
                "65cf0ce07e616969"
            ]
        ]
    },
    {
        "id": "68ae67dc039f05a4",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "Bat>80",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "90",
        "payloadType": "num",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "f1a2d6d4a2aa6dcd"
            ]
        ]
    },
    {
        "id": "d30b3d8db4f7db5c",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "Bat<65",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "f1a2d6d4a2aa6dcd"
            ]
        ]
    },
    {
        "id": "f1a2d6d4a2aa6dcd",
        "type": "function",
        "z": "7d429c7cf11f52de",
        "name": "batData",
        "func": "flow.set(\"batteryState\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 380,
        "wires": [
            [
                "557724e20a9604b0",
                "cfb7d73eb5fa264a"
            ]
        ]
    },
    {
        "id": "557724e20a9604b0",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "testDebug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 380,
        "wires": []
    },
    {
        "id": "57dcf855cf4a0a4d",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "PV<2000",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1999",
        "payloadType": "num",
        "x": 320,
        "y": 320,
        "wires": [
            [
                "39c0db98dae55b6f"
            ]
        ]
    },
    {
        "id": "39c0db98dae55b6f",
        "type": "function",
        "z": "7d429c7cf11f52de",
        "name": "pvData",
        "func": "flow.set(\"pvState\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "aafbb7bd80eeb2c1",
                "cfb7d73eb5fa264a"
            ]
        ]
    },
    {
        "id": "8bace2aa336398f9",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "PV>=2000",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2001",
        "payloadType": "num",
        "x": 320,
        "y": 280,
        "wires": [
            [
                "39c0db98dae55b6f"
            ]
        ]
    },
    {
        "id": "aafbb7bd80eeb2c1",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "testPVDebug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "d32c6744663d29cd",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "functionDebug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 300,
        "wires": []
    },
    {
        "id": "cfb7d73eb5fa264a",
        "type": "function",
        "z": "7d429c7cf11f52de",
        "name": "",
        "func": "var pvPower=flow.get(\"pvState\");\nvar battery=flow.get(\"batteryState\");\nvar feed=flow.get(\"feedin\");\nvar timeNow=flow.get(\"time\");\nif (timeNow<'14')\n{\n    if (pvPower>='2000') \n        {\n            if(battery>='80')\n            {\n                if(feed>='-2000')\n                {\n                    msg.payload=\"Go\";\n                    return msg;\n                }\n                else\n                {\n                    msg.payload=\"Stop\";\n                    return msg;\n                }\n            }\n            if(battery<='64')\n            {\n                msg.payload=\"Stop\";\n                return msg;\n            }\n        }\n    else\n    {\n        msg.payload=\"Stop\";\n        return msg;\n    }\n}\nelse\n{\n    msg.payload=\"Stop\";\n}\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 280,
        "wires": [
            [
                "d32c6744663d29cd",
                "bc994490c0a767c9"
            ]
        ]
    },
    {
        "id": "687d27d445fc3da6",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "Bat<80 >65",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "75",
        "payloadType": "num",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "f1a2d6d4a2aa6dcd"
            ]
        ]
    },
    {
        "id": "eff0a60b134735f4",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "feedin>=5000",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5000",
        "payloadType": "num",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "737c066a6e507bab"
            ]
        ]
    },
    {
        "id": "886d25263339346a",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "feedin<2000",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-2999",
        "payloadType": "num",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "737c066a6e507bab"
            ]
        ]
    },
    {
        "id": "737c066a6e507bab",
        "type": "function",
        "z": "7d429c7cf11f52de",
        "name": "feedin",
        "func": "flow.set(\"feedin\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 160,
        "wires": [
            [
                "cfb7d73eb5fa264a",
                "c83fc5bfe25cae48"
            ]
        ]
    },
    {
        "id": "c83fc5bfe25cae48",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "testfeedin",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "b274d277a0d8d7ae",
        "type": "server-state-changed",
        "z": "7d429c7cf11f52de",
        "d": true,
        "name": "Solax acpower",
        "server": "315411fb.df557e",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.solax_acpower",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "num",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 300,
        "y": 540,
        "wires": [
            [
                "277960185a3fd394",
                "ce8ea0d7c3e3faf2"
            ]
        ]
    },
    {
        "id": "277960185a3fd394",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "test acpower",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "ce8ea0d7c3e3faf2",
        "type": "function",
        "z": "7d429c7cf11f52de",
        "name": "acData",
        "func": "var pvPower=flow.get(\"pvState\");\ncontext.set(\"tempAcPowerState\",msg.payload);\n//context.set(\"AcPowerState\",msg.payload);\n//AcPowerState -='pvState'\n//msg.payload ='pvState'\n//flow.set(\"acPowerUsed\",pvState);\n//flow.set(\"acPowerUsed\",msg.payload);\nflow.set(\"acPowerUsed\",'pvPower'-'tempAcPowerState');\nmsg.payload=\"acPowerUsed\";\nreturn msg;\n\n\n//flow.set(\"batteryState\",msg.payload);\n//return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 500,
        "wires": [
            [
                "f49b93f6923f2cd9"
            ]
        ]
    },
    {
        "id": "f49b93f6923f2cd9",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "debugAcUsed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 500,
        "wires": []
    },
    {
        "id": "b4213e925fe723ae",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "acPower<65",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "ce8ea0d7c3e3faf2"
            ]
        ]
    },
    {
        "id": "61fa6e32cd5c2d9f",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "acPower>80",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "81",
        "payloadType": "num",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "ce8ea0d7c3e3faf2"
            ]
        ]
    },
    {
        "id": "8642cf1dfd465a4e",
        "type": "function",
        "z": "7d429c7cf11f52de",
        "name": "time",
        "func": "flow.set(\"time\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "cfb7d73eb5fa264a",
                "497b0e3bde1821bf"
            ]
        ]
    },
    {
        "id": "c4b0978e76569e4d",
        "type": "moment",
        "z": "7d429c7cf11f52de",
        "name": "Time",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Europe/London",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH",
        "locale": "C",
        "output": "",
        "outputType": "msg",
        "outTz": "Europe/London",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "8642cf1dfd465a4e"
            ]
        ]
    },
    {
        "id": "b1acd361c9691d7c",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "c4b0978e76569e4d"
            ]
        ]
    },
    {
        "id": "497b0e3bde1821bf",
        "type": "debug",
        "z": "7d429c7cf11f52de",
        "name": "test time",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "59bf52652c96d756",
        "type": "api-current-state",
        "z": "7d429c7cf11f52de",
        "name": "Solax feedinpower",
        "server": "315411fb.df557e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.solax_feedinpower",
        "state_type": "num",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "737c066a6e507bab"
            ]
        ]
    },
    {
        "id": "b2282fb6d9c86ace",
        "type": "api-current-state",
        "z": "7d429c7cf11f52de",
        "name": "Solax PV power",
        "server": "315411fb.df557e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.solax_feedinpowerm2",
        "state_type": "num",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "39c0db98dae55b6f"
            ]
        ]
    },
    {
        "id": "983a086a22d9abfb",
        "type": "api-current-state",
        "z": "7d429c7cf11f52de",
        "name": "Solax Battary",
        "server": "315411fb.df557e",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.solax_battery",
        "state_type": "num",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 310,
        "y": 360,
        "wires": [
            [
                "f1a2d6d4a2aa6dcd"
            ]
        ]
    },
    {
        "id": "17b51f07c88c746a",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": "24",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "983a086a22d9abfb"
            ]
        ]
    },
    {
        "id": "4b6969b7c9c6b6b4",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "b2282fb6d9c86ace"
            ]
        ]
    },
    {
        "id": "641dbb980c5643b8",
        "type": "inject",
        "z": "7d429c7cf11f52de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "59bf52652c96d756"
            ]
        ]
    },
    {
        "id": "315411fb.df557e",
        "type": "server",
        "name": "Home Assistant",
        "version": 1,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true
    }
]
